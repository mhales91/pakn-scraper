# .github/workflows/scrape.yml
name: scrape

on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *"  # daily 01:00 UTC

jobs:
  scrape:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 6 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x

      - name: Restore packages
        working-directory: src
        run: dotnet restore

      - name: Build (Debug) so playwright.ps1 exists
        working-directory: src
        run: dotnet build -c Debug

      - name: Install Playwright Chromium (per README)
        working-directory: src
        shell: pwsh
        run: bin/Debug/net6.0/playwright.ps1 install chromium

      # ðŸ‘‡ Force a NZ location so the site picks a nearby store (avoids IP geolocation)
      - name: Write appsettings.json (NZ store coords)
        run: |
          mkdir -p src
          cat > src/appsettings.json <<'JSON'
          {
            "GEOLOCATION_LONG": "176.096",   // TGA
            "GEOLOCATION_LAT":  "â€“37.741"
          }
          JSON
          echo "---- appsettings.json ----"
          cat src/appsettings.json

      - name: Ensure Urls.txt is in runtime folder
        run: |
          test -f src/Urls.txt || (echo "src/Urls.txt missing!" && exit 1)
          cp -f src/Urls.txt src/bin/Debug/net6.0/Urls.txt
          echo "---- head src/Urls.txt ----"; head -n 40 src/Urls.txt || true
          echo "---- head bin/Debug/net6.0/Urls.txt ----"; head -n 40 src/bin/Debug/net6.0/Urls.txt || true

      - name: Install xvfb
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Run scraper (dry run) under Xvfb
        working-directory: src
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
        run: |
          set -o pipefail
          echo "Starting dotnet run at $(date -u)"
          xvfb-run -a -s "-screen 0 1280x720x24" \
            bash -lc '{ dotnet run ; } > ../out.stdout.txt 2> ../out.stderr.txt'; EC=$?
          echo "dotnet run exit code: $EC"
          echo "-------- out.stderr.txt --------"; (sed -n '1,400p' ../out.stderr.txt || true)
          echo "-------- tail out.stdout.txt --------"; (tail -n 200 ../out.stdout.txt || true)
          exit $EC

      - name: Upload outputs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scrape-outputs
          path: |
            out.stdout.txt
            out.stderr.txt
            src/Urls.txt
            src/appsettings.json
          if-no-files-found: warn
